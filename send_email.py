#!/usr/bin/env python3

"""
send_email.py
===============

This helper script emails the timeline chart generated by ``generate_chart.py``.
It uses SMTP over SSL to connect to a mail server (for example Gmail) and
sends the image as an attachment.  Authentication details and the recipient
address are read from environment variables so that sensitive credentials
aren’t stored in the repository.

Required environment variables:

    EMAIL_ADDRESS    – the email account to send from
    EMAIL_PASSWORD   – the password or app‑specific password for the account
    RECIPIENT_EMAIL  – the email address to send the chart to (defaults
                       to EMAIL_ADDRESS if unset)

Modify ``SMTP_SERVER`` and ``SMTP_PORT`` below to match your email provider’s
settings.  Many providers (e.g. Gmail) require the use of an app password
instead of your primary login password and may need less secure access
enabled.
"""

import os
import smtplib
from email.message import EmailMessage
from pathlib import Path


# Adjust these settings if you are not using Gmail
SMTP_SERVER = os.environ.get('SMTP_SERVER', 'smtp.gmail.com')
SMTP_PORT = int(os.environ.get('SMTP_PORT', '465'))  # SSL port for Gmail


def send_chart(image_path: str) -> None:
    """Compose and send an email with ``image_path`` attached.

    Args:
        image_path: Path to the PNG image to attach.
    """
    email_address = os.environ.get('EMAIL_ADDRESS')
    email_password = os.environ.get('EMAIL_PASSWORD')
    recipient = os.environ.get('RECIPIENT_EMAIL') or email_address
    if not email_address or not email_password:
        raise RuntimeError('EMAIL_ADDRESS and EMAIL_PASSWORD must be set as environment variables.')

    # Prepare the email message
    msg = EmailMessage()
    msg['Subject'] = 'Weekly PhD timeline update'
    msg['From'] = email_address
    msg['To'] = recipient
    msg.set_content('Attached is the latest version of your PhD timeline chart.')

    # Attach the image
    img_path = Path(image_path)
    with open(img_path, 'rb') as f:
        img_data = f.read()
    msg.add_attachment(img_data, maintype='image', subtype='png', filename=img_path.name)

    # Send via SMTP over SSL
    with smtplib.SMTP_SSL(SMTP_SERVER, SMTP_PORT) as smtp:
        smtp.login(email_address, email_password)
        smtp.send_message(msg)


if __name__ == '__main__':
    send_chart('timeline.png')